overlay: 1.0.0
info:
  title: CodeSamples overlay for ruby target
  version: 0.0.0
actions:
  - target: $["paths"]["/analytics"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "retrieveAnalytics"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::RetrieveAnalyticsRequest.new(\n  timezone: \"America/New_York\",\n  city: \"New York\",\n  device: \"Desktop\",\n  browser: \"Chrome\",\n  os: \"Windows\",\n  referer: \"google.com\",\n  referer_url: \"https://dub.co/blog\",\n)\n    \nres = s.analytics.retrieve(req)\n\nif ! res.one_of.nil?\n  # handle response\nend"
  - target: $["paths"]["/customers"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getCustomers"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetCustomersRequest.new()\n    \nres = s.customers.list(req)\n\nif ! res.response_bodies.nil?\n  # handle response\nend"
  - target: $["paths"]["/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "deleteCustomer"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.customers.delete(id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getCustomer"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetCustomerRequest.new(\n  id: \"<id>\",\n)\n    \nres = s.customers.get(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "updateCustomer"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::UpdateCustomerRequest.new(\n  id: \"<id>\",\n)\n    \nres = s.customers.update(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/domains"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "listDomains"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::ListDomainsRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.domains.list(req)\n\nif ! res.domain_schemas.nil?\n  # handle response\nend"
  - target: $["paths"]["/domains"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "createDomain"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateDomainRequestBody.new(\n  slug: \"acme.com\",\n  expired_url: \"https://acme.com/expired\",\n  not_found_url: \"https://acme.com/not-found\",\n  archived: false,\n  placeholder: \"https://dub.co/help/article/what-is-dub\",\n)\n    \nres = s.domains.create(req)\n\nif ! res.domain_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/domains/{slug}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "deleteDomain"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.domains.delete(slug=\"acme.com\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/domains/{slug}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "updateDomain"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.domains.update(slug=\"acme.com\", request_body=::OpenApiSDK::Operations::UpdateDomainRequestBody.new(\n  slug: \"acme.com\",\n  expired_url: \"https://acme.com/expired\",\n  not_found_url: \"https://acme.com/not-found\",\n  archived: false,\n  placeholder: \"https://dub.co/help/article/what-is-dub\",\n))\n\nif ! res.domain_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/events"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "listEvents"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::ListEventsRequest.new(\n  timezone: \"America/New_York\",\n  city: \"New York\",\n  device: \"Desktop\",\n  browser: \"Chrome\",\n  os: \"Windows\",\n  referer: \"google.com\",\n  referer_url: \"https://dub.co/blog\",\n)\n    \nres = s.events.list(req)\n\nif ! res.click_events.nil?\n  # handle response\nend"
  - target: $["paths"]["/links"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getLinks"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinksRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.links.list(req)\n\nif ! res.link_schemas.nil?\n  # handle response\nend"
  - target: $["paths"]["/links"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "createLink"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n)\n    \nres = s.links.create(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/bulk"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "bulkDeleteLinks"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::BulkDeleteLinksRequest.new(\n  link_ids: [\n    \"clux0rgak00011...\",\n    \"clux0rgak00022...\",\n  ],\n)\n    \nres = s.links.delete_many(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/bulk"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "bulkUpdateLinks"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::BulkUpdateLinksRequestBody.new(\n  data: ::OpenApiSDK::Operations::Data.new(\n    url: \"https://google.com\",\n    tag_ids: [\n      \"clux0rgak00011...\",\n    ],\n  ),\n)\n    \nres = s.links.update_many(req)\n\nif ! res.link_schemas.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/bulk"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "bulkCreateLinks"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = [\n  ::OpenApiSDK::Operations::RequestBody.new(\n    url: \"https://google.com\",\n    external_id: \"123456\",\n    tag_ids: [\n      \"clux0rgak00011...\",\n    ],\n  ),\n]\n    \nres = s.links.create_many(req)\n\nif ! res.anies.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/count"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getLinksCount"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinksCountRequest.new()\n    \nres = s.links.count(req)\n\nif ! res.number.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getLinkInfo"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetLinkInfoRequest.new(\n  link_id: \"clux0rgak00011...\",\n  external_id: \"123456\",\n)\n    \nres = s.links.get(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/upsert"]["put"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "upsertLink"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::UpsertLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n)\n    \nres = s.links.upsert(req)\n\nif ! res.link_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/{linkId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "deleteLink"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.links.delete(link_id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/links/{linkId}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "updateLink"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.links.update(link_id=\"<id>\", request_body=::OpenApiSDK::Operations::UpdateLinkRequestBody.new(\n  url: \"https://google.com\",\n  external_id: \"123456\",\n  tag_ids: [\n    \"clux0rgak00011...\",\n  ],\n))\n\nif ! res.link_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/metatags"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getMetatags"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetMetatagsRequest.new(\n  url: \"https://dub.co\",\n)\n    \nres = s.metatags.get(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/partners"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "createPartner"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreatePartnerRequestBody.new(\n  program_id: \"<id>\",\n  name: \"<value>\",\n  email: \"Loyal79@yahoo.com\",\n  username: \"Aaliyah_Borer\",\n  link_props: ::OpenApiSDK::Operations::LinkProps.new(\n    external_id: \"123456\",\n    tag_ids: [\n      \"clux0rgak00011...\",\n    ],\n  ),\n)\n    \nres = s.partners.create(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/qr"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getQRCode"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetQRCodeRequest.new(\n  url: \"https://normal-making.name\",\n)\n    \nres = s.qr_codes.get(req)\n\nif ! res.res.nil?\n  # handle response\nend"
  - target: $["paths"]["/tags"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getTags"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetTagsRequest.new(\n  page: 1.0,\n  page_size: 50.0,\n)\n    \nres = s.tags.list(req)\n\nif ! res.tag_schemas.nil?\n  # handle response\nend"
  - target: $["paths"]["/tags"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "createTag"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateTagRequestBody.new()\n    \nres = s.tags.create(req)\n\nif ! res.tag_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/tags/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "deleteTag"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.tags.delete(id=\"<id>\")\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/tags/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "updateTag"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.tags.update(id=\"<id>\", request_body=::OpenApiSDK::Operations::UpdateTagRequestBody.new())\n\nif ! res.tag_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/tokens/embed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "createEmbedToken"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::CreateEmbedTokenRequestBody.new(\n  link_id: \"<id>\",\n)\n    \nres = s.embed_tokens.create(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/track/lead"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "trackLead"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::TrackLeadRequestBody.new(\n  click_id: \"<id>\",\n  event_name: \"Sign up\",\n)\n    \nres = s.track.lead(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/track/sale"]["post"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "trackSale"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::TrackSaleRequestBody.new(\n  amount: 996500,\n  payment_processor: ::OpenApiSDK::Operations::PaymentProcessor::PADDLE,\n  event_name: \"Purchase\",\n)\n    \nres = s.track.sale(req)\n\nif ! res.object.nil?\n  # handle response\nend"
  - target: $["paths"]["/workspaces/{idOrSlug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "getWorkspace"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n\nreq = ::OpenApiSDK::Operations::GetWorkspaceRequest.new(\n  id_or_slug: \"<value>\",\n)\n    \nres = s.workspaces.get(req)\n\nif ! res.workspace_schema.nil?\n  # handle response\nend"
  - target: $["paths"]["/workspaces/{idOrSlug}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "ruby"
          "label": "updateWorkspace"
          "source": "require 'dub'\n\n\ns = ::OpenApiSDK::Dub.new\ns.config_security(\n  ::OpenApiSDK::Shared::Security.new(\n    token: \"DUB_API_KEY\",\n  )\n)\n\n    \nres = s.workspaces.update(id_or_slug=\"<value>\", request_body=::OpenApiSDK::Operations::UpdateWorkspaceRequestBody.new())\n\nif ! res.workspace_schema.nil?\n  # handle response\nend"
