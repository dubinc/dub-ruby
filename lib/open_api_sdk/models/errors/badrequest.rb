# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Errors
    
      # The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
      class BadRequest < StandardError
        extend T::Sig
        include Crystalline::MetadataFields


        field :error, Models::Errors::Error, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('error'), required: true } }

        sig { params(error: Models::Errors::Error).void }
        def initialize(error:)
          @error = error
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @error == other.error
          true
        end
      end
    end
  end
end
