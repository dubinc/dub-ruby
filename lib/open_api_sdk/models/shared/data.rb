# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class Data
        extend T::Sig
        include Crystalline::MetadataFields


        field :click, Models::Shared::LinkClickedEventClick, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('click'), required: true } }

        field :link, Models::Shared::LinkClickedEventLink, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('link'), required: true } }

        sig { params(click: Models::Shared::LinkClickedEventClick, link: Models::Shared::LinkClickedEventLink).void }
        def initialize(click:, link:)
          @click = click
          @link = link
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @click == other.click
          return false unless @link == other.link
          true
        end
      end
    end
  end
end
