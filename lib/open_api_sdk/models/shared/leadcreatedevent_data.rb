# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class LeadCreatedEventData
        extend T::Sig
        include Crystalline::MetadataFields


        field :event_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('eventName'), required: true } }

        field :customer, Models::Shared::LeadCreatedEventCustomer, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('customer'), required: true } }

        field :click, Models::Shared::LeadCreatedEventClick, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('click'), required: true } }

        field :link, Models::Shared::LeadCreatedEventLink, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('link'), required: true } }

        sig { params(event_name: ::String, customer: Models::Shared::LeadCreatedEventCustomer, click: Models::Shared::LeadCreatedEventClick, link: Models::Shared::LeadCreatedEventLink).void }
        def initialize(event_name:, customer:, click:, link:)
          @event_name = event_name
          @customer = customer
          @click = click
          @link = link
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @event_name == other.event_name
          return false unless @customer == other.customer
          return false unless @click == other.click
          return false unless @link == other.link
          true
        end
      end
    end
  end
end
