# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class PartnerAnalyticsTopLinks
        extend T::Sig
        include Crystalline::MetadataFields

        # The unique ID of the short link
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :link, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('link'), required: true } }
        # The unique ID of the short link
        field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id'), required: true } }
        # The domain of the short link
        field :domain, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('domain'), required: true } }
        # The key of the short link
        field :key, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('key'), required: true } }
        # The short link URL
        field :short_link, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('shortLink'), required: true } }
        # The destination URL of the short link
        field :url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url'), required: true } }
        # The creation timestamp of the short link
        field :created_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('createdAt'), required: true } }
        # The comments of the short link
        field :comments, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('comments') } }
        # The custom link preview title (og:title)
        field :title, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title') } }
        # The number of clicks from this link
        field :clicks, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('clicks') } }
        # The number of leads from this link
        field :leads, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('leads') } }
        # The number of sales from this link
        field :sales, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('sales') } }
        # The total amount of sales from this link, in cents
        field :sale_amount, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('saleAmount') } }

        field :earnings, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('earnings') } }

        sig { params(link: ::String, id: ::String, domain: ::String, key: ::String, short_link: ::String, url: ::String, created_at: ::String, comments: T.nilable(::String), title: T.nilable(::String), clicks: T.nilable(::Float), leads: T.nilable(::Float), sales: T.nilable(::Float), sale_amount: T.nilable(::Float), earnings: T.nilable(::Float)).void }
        def initialize(link:, id:, domain:, key:, short_link:, url:, created_at:, comments: nil, title: nil, clicks: 0.0, leads: 0.0, sales: 0.0, sale_amount: 0.0, earnings: 0.0)
          @link = link
          @id = id
          @domain = domain
          @key = key
          @short_link = short_link
          @url = url
          @created_at = created_at
          @comments = comments
          @title = title
          @clicks = clicks
          @leads = leads
          @sales = sales
          @sale_amount = sale_amount
          @earnings = earnings
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @link == other.link
          return false unless @id == other.id
          return false unless @domain == other.domain
          return false unless @key == other.key
          return false unless @short_link == other.short_link
          return false unless @url == other.url
          return false unless @created_at == other.created_at
          return false unless @comments == other.comments
          return false unless @title == other.title
          return false unless @clicks == other.clicks
          return false unless @leads == other.leads
          return false unless @sales == other.sales
          return false unless @sale_amount == other.sale_amount
          return false unless @earnings == other.earnings
          true
        end
      end
    end
  end
end
