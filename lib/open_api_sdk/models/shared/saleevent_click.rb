# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class SaleEventClick
        extend T::Sig
        include Crystalline::MetadataFields


        field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id'), required: true } }

        field :timestamp, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('timestamp'), required: true } }

        field :url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url'), required: true } }

        field :country, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('country'), required: true } }

        field :city, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('city'), required: true } }

        field :region, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('region'), required: true } }

        field :continent, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('continent'), required: true } }

        field :device, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('device'), required: true } }

        field :browser, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('browser'), required: true } }

        field :os, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('os'), required: true } }

        field :referer, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('referer'), required: true } }

        field :referer_url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('refererUrl'), required: true } }

        field :qr, Crystalline::Boolean.new, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('qr'), required: true } }

        field :ip, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ip'), required: true } }

        field :trigger, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('trigger') } }

        sig { params(id: ::String, timestamp: ::String, url: ::String, country: ::String, city: ::String, region: ::String, continent: ::String, device: ::String, browser: ::String, os: ::String, referer: ::String, referer_url: ::String, qr: T::Boolean, ip: ::String, trigger: T.nilable(::String)).void }
        def initialize(id:, timestamp:, url:, country:, city:, region:, continent:, device:, browser:, os:, referer:, referer_url:, qr:, ip:, trigger: nil)
          @id = id
          @timestamp = timestamp
          @url = url
          @country = country
          @city = city
          @region = region
          @continent = continent
          @device = device
          @browser = browser
          @os = os
          @referer = referer
          @referer_url = referer_url
          @qr = qr
          @ip = ip
          @trigger = trigger
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @timestamp == other.timestamp
          return false unless @url == other.url
          return false unless @country == other.country
          return false unless @city == other.city
          return false unless @region == other.region
          return false unless @continent == other.continent
          return false unless @device == other.device
          return false unless @browser == other.browser
          return false unless @os == other.os
          return false unless @referer == other.referer
          return false unless @referer_url == other.referer_url
          return false unless @qr == other.qr
          return false unless @ip == other.ip
          return false unless @trigger == other.trigger
          true
        end
      end
    end
  end
end
