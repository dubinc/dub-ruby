# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class ClickEvent
        extend T::Sig
        include Crystalline::MetadataFields


        field :event, Models::Shared::Event, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('event'), required: true, 'decoder': Utils.enum_from_string(Models::Shared::Event, false) } }

        field :timestamp, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('timestamp'), required: true } }

        field :click, Models::Shared::Click, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('click'), required: true } }

        field :link, Models::Shared::Link, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('link'), required: true } }
        # Deprecated: Use `click.id` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :click_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('click_id'), required: true } }
        # Deprecated: Use `link.id` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :link_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('link_id'), required: true } }
        # Deprecated: Use `link.domain` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :domain, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('domain'), required: true } }
        # Deprecated: Use `link.key` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :key, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('key'), required: true } }
        # Deprecated: Use `click.url` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url'), required: true } }
        # Deprecated: Use `click.continent` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :continent, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('continent'), required: true } }
        # Deprecated: Use `click.country` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :country, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('country'), required: true } }
        # Deprecated: Use `click.city` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :city, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('city'), required: true } }
        # Deprecated: Use `click.device` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :device, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('device'), required: true } }
        # Deprecated: Use `click.browser` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :browser, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('browser'), required: true } }
        # Deprecated: Use `click.os` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :os, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('os'), required: true } }
        # Deprecated: Use `click.qr` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :qr, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('qr'), required: true } }
        # Deprecated: Use `click.ip` instead.
        # 
        # @deprecated  true: This will be removed in a future release, please migrate away from it as soon as possible.
        field :ip, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ip'), required: true } }

        sig { params(event: Models::Shared::Event, timestamp: ::String, click: Models::Shared::Click, link: Models::Shared::Link, click_id: ::String, link_id: ::String, domain: ::String, key: ::String, url: ::String, continent: ::String, country: ::String, city: ::String, device: ::String, browser: ::String, os: ::String, qr: ::Float, ip: ::String).void }
        def initialize(event:, timestamp:, click:, link:, click_id:, link_id:, domain:, key:, url:, continent:, country:, city:, device:, browser:, os:, qr:, ip:)
          @event = event
          @timestamp = timestamp
          @click = click
          @link = link
          @click_id = click_id
          @link_id = link_id
          @domain = domain
          @key = key
          @url = url
          @continent = continent
          @country = country
          @city = city
          @device = device
          @browser = browser
          @os = os
          @qr = qr
          @ip = ip
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @event == other.event
          return false unless @timestamp == other.timestamp
          return false unless @click == other.click
          return false unless @link == other.link
          return false unless @click_id == other.click_id
          return false unless @link_id == other.link_id
          return false unless @domain == other.domain
          return false unless @key == other.key
          return false unless @url == other.url
          return false unless @continent == other.continent
          return false unless @country == other.country
          return false unless @city == other.city
          return false unless @device == other.device
          return false unless @browser == other.browser
          return false unless @os == other.os
          return false unless @qr == other.qr
          return false unless @ip == other.ip
          true
        end
      end
    end
  end
end
