# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class GetCustomersRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.
      field :email, T.nilable(::String), { 'query_param': { 'field_name': 'email', 'style': 'form', 'explode': true } }
      # A case-sensitive filter on the list based on the customer's `externalId` field. The value must be a string.
      field :external_id, T.nilable(::String), { 'query_param': { 'field_name': 'externalId', 'style': 'form', 'explode': true } }
      # Whether to include expanded fields on the customer (`link`, `partner`, `discount`).
      field :include_expanded_fields, T.nilable(T::Boolean), { 'query_param': { 'field_name': 'includeExpandedFields', 'style': 'form', 'explode': true } }


      sig { params(email: T.nilable(::String), external_id: T.nilable(::String), include_expanded_fields: T.nilable(T::Boolean)).void }
      def initialize(email: nil, external_id: nil, include_expanded_fields: nil)
        @email = email
        @external_id = external_id
        @include_expanded_fields = include_expanded_fields
      end
    end
  end
end
