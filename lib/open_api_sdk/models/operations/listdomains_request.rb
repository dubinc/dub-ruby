# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class ListDomainsRequest < ::Crystalline::FieldAugmented
      extend T::Sig

      # Whether to include archived domains in the response. Defaults to `false` if not provided.
      field :archived, T.nilable(T::Boolean), { 'query_param': { 'field_name': 'archived', 'style': 'form', 'explode': true } }
      # The page number for pagination.
      field :page, T.nilable(::Float), { 'query_param': { 'field_name': 'page', 'style': 'form', 'explode': true } }
      # The number of items per page.
      field :page_size, T.nilable(::Float), { 'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': true } }
      # The search term to filter the domains by.
      field :search, T.nilable(::String), { 'query_param': { 'field_name': 'search', 'style': 'form', 'explode': true } }


      sig { params(archived: T.nilable(T::Boolean), page: T.nilable(::Float), page_size: T.nilable(::Float), search: T.nilable(::String)).void }
      def initialize(archived: nil, page: nil, page_size: nil, search: nil)
        @archived = archived
        @page = page
        @page_size = page_size
        @search = search
      end
    end
  end
end
