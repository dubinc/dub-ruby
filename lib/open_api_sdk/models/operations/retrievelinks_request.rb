# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class RetrieveLinksRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :partner_id, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'partnerId', 'style': 'form', 'explode': true } }

        field :tenant_id, Crystalline::Nilable.new(::String), { 'query_param': { 'field_name': 'tenantId', 'style': 'form', 'explode': true } }

        sig { params(partner_id: T.nilable(::String), tenant_id: T.nilable(::String)).void }
        def initialize(partner_id: nil, tenant_id: nil)
          @partner_id = partner_id
          @tenant_id = tenant_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @partner_id == other.partner_id
          return false unless @tenant_id == other.tenant_id
          true
        end
      end
    end
  end
end
