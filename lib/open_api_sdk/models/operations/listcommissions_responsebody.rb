# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class ListCommissionsResponseBody < ::Crystalline::FieldAugmented
      extend T::Sig


      field :amount, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('amount') } }

      field :created_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('createdAt') } }

      field :currency, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('currency') } }

      field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }

      field :earnings, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('earnings') } }
      # The commission's unique ID on Dub.
      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

      field :invoice_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('invoiceId') } }

      field :partner, ::OpenApiSDK::Operations::ListCommissionsPartner, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('partner') } }

      field :quantity, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('quantity') } }

      field :status, ::OpenApiSDK::Operations::ListCommissionsStatus, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::ListCommissionsStatus, false) } }

      field :updated_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('updatedAt') } }

      field :customer, T.nilable(::OpenApiSDK::Operations::ListCommissionsCustomer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('customer') } }

      field :type, T.nilable(::OpenApiSDK::Operations::ListCommissionsType), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::ListCommissionsType, true) } }
      # The user who created the manual commission.
      field :user_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('userId') } }


      sig { params(amount: ::Float, created_at: ::String, currency: ::String, description: ::String, earnings: ::Float, id: ::String, invoice_id: ::String, partner: ::OpenApiSDK::Operations::ListCommissionsPartner, quantity: ::Float, status: ::OpenApiSDK::Operations::ListCommissionsStatus, updated_at: ::String, customer: T.nilable(::OpenApiSDK::Operations::ListCommissionsCustomer), type: T.nilable(::OpenApiSDK::Operations::ListCommissionsType), user_id: T.nilable(::String)).void }
      def initialize(amount: nil, created_at: nil, currency: nil, description: nil, earnings: nil, id: nil, invoice_id: nil, partner: nil, quantity: nil, status: nil, updated_at: nil, customer: nil, type: nil, user_id: nil)
        @amount = amount
        @created_at = created_at
        @currency = currency
        @description = description
        @earnings = earnings
        @id = id
        @invoice_id = invoice_id
        @partner = partner
        @quantity = quantity
        @status = status
        @updated_at = updated_at
        @customer = customer
        @type = type
        @user_id = user_id
      end
    end
  end
end
