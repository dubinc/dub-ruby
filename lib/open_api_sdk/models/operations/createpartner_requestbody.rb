# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class CreatePartnerRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # Email for the partner in your system. Partners will be able to claim their profile by signing up to Dub Partners with this email.
      field :email, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }
      # Full legal name of the partner.
      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }
      # The ID of the program to create a partner for.
      field :program_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('programId') } }
      # A unique username for the partner in your system. This will be used to create a short link for the partner using your program's default domain.
      field :username, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('username') } }
      # Country where the partner is based.
      field :country, T.nilable(::OpenApiSDK::Operations::Country), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('country'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::Country, true) } }
      # A brief description of the partner and their background.
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
      # Avatar image for the partner â€“ if not provided, a default avatar will be used.
      field :image, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('image') } }
      # Additional properties that you can pass to the partner's short link. Will be used to override the default link properties for this partner.
      field :link_props, T.nilable(::OpenApiSDK::Operations::LinkProps), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('linkProps') } }
      # The ID of the partner in your system.
      field :tenant_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('tenantId') } }


      sig { params(email: ::String, name: ::String, program_id: ::String, username: ::String, country: T.nilable(::OpenApiSDK::Operations::Country), description: T.nilable(::String), image: T.nilable(::String), link_props: T.nilable(::OpenApiSDK::Operations::LinkProps), tenant_id: T.nilable(::String)).void }
      def initialize(email: nil, name: nil, program_id: nil, username: nil, country: nil, description: nil, image: nil, link_props: nil, tenant_id: nil)
        @email = email
        @name = name
        @program_id = program_id
        @username = username
        @country = country
        @description = description
        @image = image
        @link_props = link_props
        @tenant_id = tenant_id
      end
    end
  end
end
