# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class UpdateWorkspaceRequestBody < ::Crystalline::FieldAugmented
      extend T::Sig


      field :allowed_hostnames, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('allowedHostnames') } }

      field :conversion_enabled, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('conversionEnabled') } }

      field :logo, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('logo') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('slug') } }


      sig { params(allowed_hostnames: T.nilable(T::Array[::String]), conversion_enabled: T.nilable(T::Boolean), logo: T.nilable(::String), name: T.nilable(::String), slug: T.nilable(::String)).void }
      def initialize(allowed_hostnames: nil, conversion_enabled: nil, logo: nil, name: nil, slug: nil)
        @allowed_hostnames = allowed_hostnames
        @conversion_enabled = conversion_enabled
        @logo = logo
        @name = name
        @slug = slug
      end
    end
  end
end
