# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class ResponseBody < ::Crystalline::FieldAugmented
      extend T::Sig

      # Whether the domain is available.
      field :available, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('available') } }
      # The domain name.
      field :domain, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('domain') } }
      # Whether the domain is a premium domain.
      field :premium, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('premium') } }
      # The price description.
      field :price, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('price') } }


      sig { params(available: T::Boolean, domain: ::String, premium: T::Boolean, price: ::String).void }
      def initialize(available: nil, domain: nil, premium: nil, price: nil)
        @available = available
        @domain = domain
        @premium = premium
        @price = price
      end
    end
  end
end
