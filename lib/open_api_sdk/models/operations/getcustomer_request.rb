# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class GetCustomerRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # The unique ID of the customer. You may use either the customer's `id` on Dub (obtained via `/customers` endpoint) or their `externalId` (unique ID within your system, prefixed with `ext_`, e.g. `ext_123`).
        field :id, ::String, { 'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': false } }
        # Whether to include expanded fields on the customer (`link`, `partner`, `discount`).
        field :include_expanded_fields, Crystalline::Nilable.new(Crystalline::Boolean.new), { 'query_param': { 'field_name': 'includeExpandedFields', 'style': 'form', 'explode': true } }

        sig { params(id: ::String, include_expanded_fields: T.nilable(T::Boolean)).void }
        def initialize(id:, include_expanded_fields: nil)
          @id = id
          @include_expanded_fields = include_expanded_fields
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @include_expanded_fields == other.include_expanded_fields
          true
        end
      end
    end
  end
end
