# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class UpdateCustomerRequestBody
        extend T::Sig
        include Crystalline::MetadataFields

        # Unique identifier for the customer in the client's app.
        field :external_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('externalId') } }
        # Email of the customer in the client's app.
        field :email, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }
        # Name of the customer in the client's app. If not provided, a random name will be generated.
        field :name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }
        # Avatar URL of the customer in the client's app.
        field :avatar, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('avatar') } }

        sig { params(external_id: T.nilable(::String), email: T.nilable(::String), name: T.nilable(::String), avatar: T.nilable(::String)).void }
        def initialize(external_id: nil, email: nil, name: nil, avatar: nil)
          @external_id = external_id
          @email = email
          @name = name
          @avatar = avatar
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @external_id == other.external_id
          return false unless @email == other.email
          return false unless @name == other.name
          return false unless @avatar == other.avatar
          true
        end
      end
    end
  end
end
